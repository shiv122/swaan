openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/provider/login:
    post:
      summary: ''
      operationId: postApiProviderLogin
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Provider Auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kaycee25@example.com
                password:
                  type: string
                  description: ''
                  example: pariatur
                device_id:
                  type: string
                  description: ''
                  example: magnam
              required:
                - email
                - password
                - device_id
      security: []
  /api/provider/register:
    post:
      summary: ''
      operationId: postApiProviderRegister
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Provider Auth'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kemmer.vernon@example.net
                phone:
                  type: string
                  description: ''
                  example: officia
                password:
                  type: string
                  description: ''
                  example: neque
                device_id:
                  type: string
                  description: ''
                  example: amet
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 1024 kilobytes.'
              required:
                - name
                - email
                - phone
                - password
                - device_id
                - image
      security: []
  /api/provider:
    get:
      summary: ''
      operationId: getApiProvider
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Provider Basic'
  /api/provider/services:
    get:
      summary: ''
      operationId: getApiProviderServices
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Provider Service'
    post:
      summary: ''
      operationId: postApiProviderServices
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Provider Service'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sequi
                category_id:
                  type: integer
                  description: ''
                  example: 2
                sub_category_id:
                  type: integer
                  description: ''
                  example: 4
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Pariatur atque a reiciendis.'
                latitude:
                  type: string
                  description: ''
                  example: ad
                longitude:
                  type: string
                  description: ''
                  example: qui
                type:
                  type: string
                  description: 'Must be one of <code>fixed</code> or <code>hourly</code>.'
                  example: hourly
                price:
                  type: number
                  description: ''
                  example: 74.8
                discount:
                  type: number
                  description: ''
                  example: 47283131.91578
                hours:
                  type: integer
                  description: 'This field is required when <code>minutes</code> is not present.'
                  example: 10
                minutes:
                  type: integer
                  description: 'This field is required when <code>hours</code> is not present.'
                  example: 14
                images:
                  type: array
                  description: 'Must be an image. Must not be greater than 1024 kilobytes.'
                  items:
                    type: string
                    format: binary
                slots:
                  type: array
                  description: ''
                  example:
                    - natus
                  items:
                    type: integer
              required:
                - name
                - category_id
                - type
                - price
  /api/provider/slots:
    get:
      summary: ''
      operationId: getApiProviderSlots
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Provider Slot'
    post:
      summary: ''
      operationId: postApiProviderSlots
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Provider Slot'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: string
                  description: ''
                  example: dolorem
                start_time:
                  type: string
                  description: ''
                  example: aliquam
                end_time:
                  type: string
                  description: ''
                  example: aliquam
              required:
                - day
                - start_time
                - end_time
  '/api/provider/slots/{slot}':
    delete:
      summary: ''
      operationId: deleteApiProviderSlotsSlot
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Provider Slot'
    parameters:
      -
        in: path
        name: slot
        description: 'The slot.'
        example: facere
        required: true
        schema:
          type: string
  /api/user/login:
    post:
      summary: ''
      operationId: postApiUserLogin
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User Auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: muller.jamar@example.org
                password:
                  type: string
                  description: ''
                  example: nostrum
                device_id:
                  type: string
                  description: ''
                  example: vitae
              required:
                - email
                - password
                - device_id
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
tags:
  -
    name: 'Provider Auth'
    description: "\nAPIs for provider authentication and registration"
  -
    name: 'Provider Basic'
    description: "\nAPIs for provider basic operations"
  -
    name: 'Provider Service'
    description: "\nAPIs for provider service operations"
  -
    name: 'Provider Slot'
    description: "\nAPIs for provider slot operations"
  -
    name: 'User Auth'
    description: "\nAPIs for user authentication and registration"
  -
    name: 'User Basic'
    description: "\nAPIs for user basic operations"
